package com.example.myapplication;

import android.content.Context;
import android.content.Intent;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Path;
import android.util.AttributeSet;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;

public class MyCanvas extends View {

    int[] Tile = {
            0,0,0, //black
            150,75,0, //brown
            255,0,0, //red
            255,68,51, //orange
            255,255,0, //yellow
            0,255,0, //green
            0,0,255, //blue
            128,0,128, //purple
            128,128,128, //gray
            255,255,255  //white
    };

    int xTouch, yTouch;
    String From = "", To = "";
    Paint White_Rect = new Paint();
    Paint Blue_Rect = new Paint();
    Paint Gray_Rect = new Paint();
    Paint Cyan_Rect = new Paint();
    Paint Green_Rect = new Paint();
    Paint Red_Rect = new Paint();
    Paint Purple_Rect = new Paint();
    Paint Yellow_Rect = new Paint();
    Paint Orange_Rect = new Paint();
    Paint Black_Rect = new Paint();
    Paint White_Line = new Paint();
    Paint Red_Dot = new Paint();
    private Example[] FromTo = new Example[25];
    int Number_of_Clicks = 0;

    String canvascoord;
    Paint paint;
    Path path;
    boolean Blue_Selected = false;
    boolean From_Selected = false;
    boolean To_Selected = false;
    boolean Draw_Line = false;
    boolean One_Shot = false;
    public MyCanvas(Context context, AttributeSet attrs) {
        super(context, attrs);
        paint = new Paint();
        path = new Path();
        paint.setAntiAlias(true);
        paint.setColor(Color.CYAN);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        paint.setStrokeWidth(5f);

    }
    protected void onDraw(Canvas canvas) {

        super.onDraw(canvas);
        canvas.drawPath(path, paint);

        canvas.drawPaint(White_Rect);
        White_Rect.setColor(Color.WHITE);
        canvas.drawRect(0,25,1100, 2100,White_Rect);

        Blue_Rect.setColor(Color.BLUE);
        canvas.drawRect(0,1700,200, 1800,Blue_Rect);
        Blue_Rect.setColor(Color.BLACK);
        Blue_Rect.setTextSize(40);
        canvas.drawText("From To",25,1750,Blue_Rect);

        Gray_Rect.setColor(Color.GRAY);
        canvas.drawRect(250,1700,450, 1800,Gray_Rect);
        Gray_Rect.setColor(Color.BLACK);
        Gray_Rect.setTextSize(40);
        canvas.drawText("Build",300,1750,Gray_Rect);

        Cyan_Rect.setColor(Color.CYAN);
        canvas.drawRect(500,1700,700, 1800,Cyan_Rect);
        Cyan_Rect.setColor(Color.BLACK);
        Cyan_Rect.setTextSize(40);
        canvas.drawText("Check",550,1750,Cyan_Rect);

        Green_Rect.setColor(Color.GREEN);
        canvas.drawRect(750,1700,950, 1800,Green_Rect);
        Green_Rect.setColor(Color.BLACK);
        Green_Rect.setTextSize(40);
        canvas.drawText("Devide",800,1750,Green_Rect);

        Red_Rect.setColor(Color.RED);
        canvas.drawRect(0,1850,200, 1950,Red_Rect);
        Red_Rect.setColor(Color.BLACK);
        Red_Rect.setTextSize(40);
        canvas.drawText("Echoes",25,1900,Red_Rect);

        Purple_Rect.setColor(Color.rgb(128, 0, 128));
        canvas.drawRect(250,1850,450, 1950,Purple_Rect);
        Purple_Rect.setColor(Color.BLACK);
        Purple_Rect.setTextSize(40);
        canvas.drawText("Foxes",300,1900,Purple_Rect);

        Yellow_Rect.setColor(Color.YELLOW);
        canvas.drawRect(500,1850,700, 1950,Yellow_Rect);
        Yellow_Rect.setColor(Color.BLACK);
        Yellow_Rect.setTextSize(40);
        canvas.drawText("Golpher",550,1900,Yellow_Rect);

        Orange_Rect.setColor(Color.rgb(255, 165, 0));
        canvas.drawRect(750,1850,950, 1950,Orange_Rect);
        Orange_Rect.setColor(Color.BLACK);
        Orange_Rect.setTextSize(40);
        canvas.drawText("Turn",800,1900,Orange_Rect);
        for (int i = 0; i <25; i++)
        {FromTo[i] = new Example();}

        if (Blue_Selected == true && One_Shot == true) {
            if (FromTo[0].xStart == 0) {
                Black_Rect.setColor(Color.BLACK);
                Black_Rect.setTextSize(40);
                FromTo[0].xStart = xTouch;
                FromTo[0].yStart = yTouch;
                From = "From : " + String.valueOf(FromTo[0].xStart) + " , " + String.valueOf(FromTo[0].yStart);
                canvas.drawText(From, 50, 2000, Black_Rect);
               }
        }
            if (From_Selected == true) {
                    FromTo[0].xEnd = xTouch;
                    FromTo[0].yEnd = yTouch;
                    To = String.valueOf(Number_of_Clicks) + String.valueOf(" To : " + FromTo[0].xEnd) + " , " + String.valueOf(FromTo[0].yEnd);
                    canvas.drawText(From, 50, 2000, Black_Rect);
                    canvas.drawText(To, 550, 2000, Black_Rect);
                    To_Selected = true;
                }
    }

    public boolean onTouchEvent (MotionEvent event){


        float xPos = event.getX();
        float yPos = event.getY();
        xTouch = (int)xPos;
        yTouch = (int)yPos;
        Number_of_Clicks = Number_of_Clicks + 1;
        switch (event.getAction()){
            case MotionEvent.ACTION_DOWN:
                path.moveTo(xPos,yPos);
                One_Shot = true;

                return true;
            case MotionEvent.ACTION_MOVE:
                path.lineTo(xPos,yPos);
                break;
            case MotionEvent.ACTION_UP:


                break;
            default:
                return false;

        }
        invalidate();
        canvascoord = String.valueOf(xPos) + " " + String.valueOf(yPos);
        String TAG = "button";
        Log.d(TAG, canvascoord);
        if (yPos >= 1700 && yPos <+1800){
            if (xPos >=0 && xPos <= 200){
                Blue_Selected = true;}
        }

        return true;
    }
}
